steps:
  - name: node
    entrypoint: npm
    args: ["run", "create-env"]
    env:
      - 'NEXT_PUBLIC_API_ENDPOINT=${_NEXT_PUBLIC_API_ENDPOINT}'
      - 'NEXT_PUBLIC_ENV=${_NEXT_PUBLIC_ENV}' 
      - 'NEXT_PUBLIC_FILE_SERVER_ENDPOINT=${_NEXT_PUBLIC_FILE_SERVER_ENDPOINT}'
      - 'NEXT_PUBLIC_ETHEREUM_QUICKNODE_URL=${_NEXT_PUBLIC_ETHEREUM_QUICKNODE_URL}'
      - 'NEXT_PUBLIC_POLYGON_QUICKNODE_URL=${_NEXT_PUBLIC_POLYGON_QUICKNODE_URL}' 
      - 'NEXT_PUBLIC_PINATA=${_NEXT_PUBLIC_PINATA}'
      - 'NEXT_PUBLIC_SENTRY_DSN=${_NEXT_PUBLIC_SENTRY_DSN}'
      - 'NEXT_PUBLIC_WEB_SOKET=${_NEXT_PUBLIC_WEB_SOKET}' 
      - 'NEXT_PUBLIC_WEBHOOK_URL_ETHEREUM=${_NEXT_PUBLIC_WEBHOOK_URL_ETHEREUM}'
      - 'NEXT_PUBLIC_WEBHOOK_URL_POLYGON=${_NEXT_PUBLIC_WEBHOOK_URL_POLYGON}'
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '-t'
      - '$_GCR_HOSTNAME/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA'
      - .
      - '-f'
      - Dockerfile
    id: Build
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '$_GCR_HOSTNAME/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA'
    id: Push
  - name: gcr.io/cloud-builders/kubectl
    env:
      - CLOUDSDK_COMPUTE_ZONE=us-central1-c
      - CLOUDSDK_CONTAINER_CLUSTER=web2-frontend
    args:
      - apply
      - '-f'
      - deployment/prod/deployment.yml
  - name: gcr.io/cloud-builders/kubectl
    env:
      - CLOUDSDK_COMPUTE_ZONE=us-central1-c
      - CLOUDSDK_CONTAINER_CLUSTER=web2-frontend
    args:
      - set
      - image
      - deployment/web2-frontend
      - 'decir-webapp=$_GCR_HOSTNAME/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA'
images:
  - '$_GCR_HOSTNAME/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA'
options:
  substitutionOption: ALLOW_LOOSE
substitutions:
  _TRIGGER_ID: 55ab0f5a-731d-49f8-bd37-86e01b29b856
  _SERVICE_NAME: decir-webapp
  _DEPLOY_REGION: us-central1-c
  _GCR_HOSTNAME: gcr.io
  _PLATFORM: managed
  _LABELS: gcp-trigger-id=55ab0f5a-731d-49f8-bd37-86e01b29b856
tags:
  - creabo-web2-frontend
